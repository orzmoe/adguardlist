name: sync-adrules

on:
  workflow_dispatch:
  watch:
    types: [started]
  schedule:
    - cron: 21 */3 * * *

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "12.x"
      - run: npm install

      - name: Install hostlist-complier
        run: npm i -g @adguard/hostlist-compiler@v1.0.35

      - name: Set folder condition, variables and timezone
        run: |
          sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          rm -f ./out*.txt

      - name: Create output.txt
        run: |
          # 首先编译规则，生成临时文件
          hostlist-compiler -i "./setting/rules.txt" -o "./temp_rules.txt"
          
          # 统计编译后的规则行数
          line=$(wc -l < "./temp_rules.txt")
          
          # 创建最终的 output.txt 文件
          echo "# Title: 5whys Adguard Home Rules List (Use with a lot of false rejects)" > output.txt
          echo "# Verison: $(date +%Y%m%d%H%M)" >> output.txt
          echo "# Expires: around 1 day" >> output.txt
          echo "# Total number of rules = $line" >> output.txt
          echo "# Below are the links of the adblock rules" >> output.txt
          while IFS= read -r line; do echo "# $line" >> output.txt; done < "./setting/rules.txt"
          echo "####################################################################################" >> output.txt
          
          # 添加编译后的规则内容
          cat "./temp_rules.txt" >> output.txt
          echo "####################################################################################" >> output.txt
          
          # 清理临时文件
          rm -f "./temp_rules.txt"

      - name: move output file
        run: |
          mkdir -p ./publish/
          mkdir -p ./rules/
          cp ./output.txt ./publish/
          cp ./output.txt ./rules/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2.3.2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "121651775+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Commit *.txt
        run: |
          echo `date +"%Y-%m-%d %H:%M:%S"` ZJC CKC >> ./rules/date.log
          git config --global user.email "121651775+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add ./rules/output* ./rules/date.log
          git commit -m "${{ env.RELEASE_NAME }}"
          git push
